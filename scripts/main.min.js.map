{"version":3,"sources":["main.js"],"names":["createThreeJsBg","createPointCloud","arg","texture","THREE","TextureLoader","load","img","geom","Geometry","material","PointsMaterial","size","transparent","opacity","map","sizeAttenuation","color","blending","AdditiveBlending","num","range","i","particle","Vector3","Math","random","vertices","push","createPointCloud4","applyMatrix","Matrix4","makeTranslation","cloud4","Points","name","scene","add","render","cloud","rotation","x","z","cloud2","cloud3","y","requestAnimationFrame","renderer","camera","Scene","fog","FogExp2","PerspectiveCamera","window","innerWidth","innerHeight","WebGLRenderer","antialias","setSize","setClearColor","Color","document","getElementById","appendChild","domElement","addEventListener","a","b","c","light","PointLight","lookAt","position","set","castShadow","AmbientLight","validateEmail","email","re","test","isLocalhost","Boolean","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","update","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","e","console","error","form","$","submit","evt","preventDefault","input","val","ajax","url","attr","method","data","serialize","dataType","contentType","done","result","hide","text","append"],"mappings":"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","file":"main.min.js","sourcesContent":["/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* eslint-env browser */\n(function() {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n    );\n\n  if ('serviceWorker' in navigator &&\n      (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n    .then(function(registration) {\n      // Check to see if there's an updated version of service-worker.js with\n      // new files to cache:\n      // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-registration-update-method\n      if (typeof registration.update === 'function') {\n        registration.update();\n      }\n\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function() {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function() {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' +\n                                'service worker became redundant.');\n\n              default:\n                // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function(e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n  createThreeJsBg();\n\n  // Ajax form submit\n\n  // validate input\n  function validateEmail( email ) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test( email );\n  }\n  var form = $(\"form\");\n  // submit form\n  form.submit( function(evt) {\n    evt.preventDefault();\n    var input = $(\".email-input\").val();\n\n    // Test if email is validated\n    if ( validateEmail( input ) ) {\n      $.ajax({\n        url: form.attr(\"action\"),\n        method: form.attr(\"method\"),\n        data: form.serialize(),\n        dataType: 'json',\n        contentType: \"application/json; charset=utf-8\"\n      })\n      .done(function(data) {\n        if ( data.result == \"success\" ) {\n          form.hide();\n          $(\"#form-hide\").hide();\n          $(\"#form-response\").text(\"\");\n          $(\"#form-response\").append(\"<h3>Thank you!</h3><p>Check your inbox to confirm your subscription.</p>\");\n        } else {\n          $(\"#form-response\").text(\"Something went wrong, give it another shot!\");\n        }\n      });\n    } else {\n      $(\"#form-response\").text(\"Invalid email, give it another shot!\");\n    }\n  })\n\n})();\n\nfunction createThreeJsBg(){\n  /*scene*/\n  var scene = new THREE.Scene();\n  scene.fog = new THREE.FogExp2( \"red\", 0.0003);\n  /*camera*/\n  var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n  /*renderer*/\n  var renderer = new THREE.WebGLRenderer({antialias:true}); //create canvas\n  renderer.setSize(window.innerWidth, window.innerHeight); //set canvas size;\n  renderer.setClearColor(new THREE.Color(0x292a5d, 1.0));// set rendering background color\n  document.getElementById(\"bg--threejs\").appendChild(renderer.domElement); // pass in _canvas\n  window.addEventListener(\"resize\", function(){\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  })\n  var cloud;\n  var cloud2;\n  var cloud3;\n  var cloud4;\n  function createPointCloud(arg){\n      var texture = new THREE.TextureLoader().load(arg.img);\n      var geom = new THREE.Geometry();\n      var material = new THREE.PointsMaterial({\n        size: 11,\n        transparent: true,\n        opacity: 1,\n        map: texture,\n        sizeAttenuation: false,\n        color: 0xffffff,\n        blending: THREE.AdditiveBlending,\n      })\n      var num= arg.num; \n      var range = 500;\n      for (var i = 0; i < num; i++) {\n        var particle = new THREE.Vector3(\n          Math.random()*range-range/2,\n          Math.random()*range-range/2,\n          Math.random()*range-range/2\n          )\n        geom.vertices.push(particle);\n      };\n      return {\n        geom:geom,\n        material :material \n      }\n  } \n  var a = createPointCloud({img:'images/threejs/6-06.png',num:11,size:100,})\n  cloud = new THREE.Points(a.geom, a.material);\n  scene.add(cloud);\n  var b = createPointCloud({img:\"images/threejs/7-07.png\",num:22,size:100,})\n  cloud2 = new THREE.Points(b.geom, b.material);\n  scene.add(cloud2);\n  var c = createPointCloud({img:\"images/threejs/8-08.png\",num:30,size:100,})\n  cloud3 = new THREE.Points(c.geom, c.material);\n  scene.add(cloud3);\n  function createPointCloud4(img){\n      var texture = new THREE.TextureLoader().load(img);\n      var geom = new THREE.Geometry();\n      var material = new THREE.PointsMaterial({\n        size: 7,\n        transparent:true,\n        opacity:0.2,\n        map: texture,\n        sizeAttenuation:true,\n        color:0xffffff,\n      })\n      var num= 1; \n      var range = 1;\n      for (var i = 0; i < num; i++) {\n        var particle = new THREE.Vector3(\n          Math.random()*range-range/2,\n         0.4,\n          Math.random()*range-range/2-10\n          )\n        geom.vertices.push(particle);\n      };\n      geom.applyMatrix(new THREE.Matrix4().makeTranslation(-1,-1,7));\n      cloud4 = new THREE.Points(geom, material);\n      cloud4.name =\"pointCloud\";\n      scene.add(cloud4);\n  } \n  createPointCloud4(\"images/imm2016logotype_lgbg.svg\")\n  var light = new THREE.PointLight(0xffffff);\n  light.lookAt(scene.position);\n  light.position.set(40,170,11);\n  light.castShadow = true;\n  scene.add(light);\n  var light = new THREE.AmbientLight( 0x404040 ); // soft white light\n  scene.add( light );\n  function render() {\n        cloud.rotation.x += 0.0001;\n        cloud.rotation.z += 0.001;\n        cloud2.rotation.x += 0.0008;\n        cloud2.rotation.z += 0.002;\n        cloud3.rotation.y += 0.0008;\n        cloud3.rotation.z += 0.002;\n        cloud4.rotation.z += 0.002;\n        requestAnimationFrame( render );\n        renderer.render( scene, camera );\n  }\n  render();\n}"],"sourceRoot":"/source/"}